name: Integration Test (Install & Use javm)

on:
  workflow_run:
    workflows: [ "Build" ]
    types: [ completed ]
    branches: [ main ]
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  linux:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: integration-tests-javm-${{ github.ref }}-${{ matrix.os || 'manual' }}
      cancel-in-progress: true
    env:
      JAVA_VERSION: "25"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with: { fetch-depth: 1 }

      - name: Install zsh & fish
        shell: bash
        run: |
          set -euo pipefail
          sudo rm -f /var/lib/man-db/auto-update
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends zsh fish

      - name: Install javm (once)
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          ./install.sh nightly
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/.local/bin:$PATH"
          javm --version
          javm install "$JAVA_VERSION" --debug

      - name: Test bash
        shell: bash
        run: |
          set -euo pipefail
          eval "$(javm init bash)"
          . .github/scripts/integration_test.sh

      - name: Test zsh
        shell: 'zsh {0}'
        run: |
          set -euo pipefail
          eval "$(javm init zsh)"
          . .github/scripts/integration_test.sh

      - name: Test fish
        shell: 'fish {0}'
        run: |
          javm init fish | source
          source .github/scripts/integration_test.fish

  macos:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-15
    concurrency:
      group: integration-tests-javm-${{ github.ref }}-macos
      cancel-in-progress: true
    env:
      JAVA_VERSION: "25"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with: { fetch-depth: 1 }

      - name: Install javm (once)
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          ./install.sh nightly
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/.local/bin:$PATH"
          javm --version
          javm install "$JAVA_VERSION" --debug

      - name: Test zsh
        shell: 'zsh {0}'
        run: |
          set -euo pipefail
          eval "$(javm init zsh)"
          . .github/scripts/integration_test.sh

  windows:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2025, windows-11-arm ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: integration-tests-javm-${{ github.ref }}-${{ matrix.os || 'manual' }}
      cancel-in-progress: true
    env:
      JAVA_VERSION: "21" # use Java 21 for testing because Temurin 25 is not yet available on Windows ARM
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with: { fetch-depth: 1 }

      - name: Install javm (once)
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $ErrorActionPreference = 'Stop'
          ./install.ps1 nightly
          # Ensure PATH persists to next steps
          "$env:LOCALAPPDATA\Programs\javm" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          $env:Path = "$env:LOCALAPPDATA\Programs\javm;$env:Path"
          javm --version
          javm install "$env:JAVA_VERSION" --debug

      - name: Test PowerShell
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          iex "$(javm init pwsh)"
          . ".github/scripts/integration_test.ps1"
